{"version":3,"sources":["../src/js/cards/elemental-card.js","../src/js/cards/acquia_lift.cards.js"],"names":[],"mappings":"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","file":"acquia_lift.card.js","sourcesContent":["/**\n * @file\n * Javascript functionality for elemental-card.\n *\n * @group card\n */\n\n(function ($, undefined) {\n  'use strict';\n\n  // CARD PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Card = function (element, options) {\n    this.type =\n    this.options =\n    this.$element = null;\n\n    this.init('card', element, options);\n  };\n\n  Card.DEFAULTS = {\n    collapsible: true,\n    collapsed: false,\n    sortable: false,\n    footerVisible: true,\n    enabled: true,\n    eventExpanded: 'card-expanded',\n    eventCollapsed: 'card-collapsed'\n  };\n\n  Card.prototype.init = function (type, element, options) {\n    this.type = type;\n    this.$element = $(element);\n    this.options = this.getOptions(options);\n\n    if (this.options.enabled) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n\n    this.render();\n  };\n\n  Card.prototype.enable = function () {\n    this.enabled = true;\n    this.$element.removeClass('is-disabled');\n  };\n\n  Card.prototype.disable = function () {\n    this.enabled = false;\n    this.$element.addClass('is-disabled');\n  };\n\n  /**\n   * Read a card data attribute from the element.\n   */\n  Card.prototype.dataAttr = function(key) {\n    var dataKey = this.type + key.charAt(0).toUpperCase() + key.slice(1);\n    var oldKey = dataKey.replace(/[A-Z]/g, function(a) {return '-' + a.toLowerCase()});\n\n    return this.$element.data(dataKey) || this.$element.data(oldKey);\n  };\n\n  Card.prototype.getDefaults = function () {\n    return Card.DEFAULTS;\n  };\n\n  Card.prototype.getOptions = function (options) {\n    var i, dataValue;\n    options = $.extend({}, this.getDefaults(), options);\n    // Look for option in data attributes like data-card-[key].\n    for (i in options) {\n      if (options.hasOwnProperty(i)) {\n        dataValue = this.dataAttr(i);\n        if (dataValue !== undefined) {\n          options[i] = dataValue;\n        }\n      }\n    }\n    return options;\n  };\n\n  Card.prototype.destroy = function () {\n    this.$element.unbind('.' + this.type).removeData('el.' + this.type);\n  };\n\n  Card.prototype.render = function () {\n    var $label, $details, detailsId;\n    var self = this;\n    this.getFooter().toggle(this.options.footerVisible);\n    if (this.options.collapsible) {\n      // Add a collapse control\n      $details = this.getDetails();\n      // Generate an ID to use with WAI-ARIA if none exists.\n      detailsId = $details.attr('id') || 'el-card-details-' + Date.now();\n      $details.attr('id', detailsId);\n      $label = this.getHeaderLabel();\n      $label.attr('aria-controls', detailsId);\n      // Toggle opening details when clicking the card label.\n      $label.bind('click.card', function (e) {\n        self.toggleOpen();\n      });\n      this.setOpen(!this.options.collapsed);\n    } else {\n      this.setOpen(true);\n    }\n    this.$element.toggleClass('is-sortable', this.options.sortable);\n  };\n\n  /**\n   * Toggle whether the main content area is open or closed.\n   *\n   * @param bool open\n   *   Indicates if the content area should be forced open or closed.\n   *   If not passed then the element is simply toggled.\n   */\n  Card.prototype.toggleOpen = function (open) {\n    var isOpen = this.isOpen();\n    var $content = this.getDetails();\n    var self = this;\n\n    // Set a value for the toggle.\n    open = open === undefined ? !isOpen : open;\n\n    // Not collapsible\n    if (!this.options.collapsible) {\n      return;\n    }\n    // No change needed if the card is already in the desired state.\n    if (open === isOpen) {\n      return;\n    }\n\n    // Allow the last action to finish.\n    if (this.$element.hasClass('is-transitioning')) {\n      return;\n    }\n    this.$element.addClass('is-transitioning');\n    if (open) {\n      $content.hide();\n      $content.slideDown('fast', function () {\n        self.setOpen(true);\n        self.$element.removeClass('is-transitioning');\n        self.$element.trigger(self.options.eventExpanded);\n      });\n    } else {\n      $content.slideUp('fast', function () {\n        self.setOpen(false);\n        self.$element.removeClass('is-transitioning');\n        self.$element.trigger(self.options.eventCollapsed);\n      });\n    }\n  };\n\n  /**\n   * Sets the final open state values on the element.\n   *\n   * @param boolean open\n   *   True if the final state should be expanded, false if collapsed.\n   */\n  Card.prototype.setOpen = function (open) {\n    var $details = this.getDetails();\n    if (open) {\n      this.$element.addClass('is-active');\n      $details.removeClass('element-hidden');\n    } else {\n      this.$element.removeClass('is-active');\n      $details.addClass('element-hidden');\n    }\n    $details.css('display', '');\n    $details.attr('aria-expanded', open);\n  };\n\n  /**\n   * Returns whether the element is currently expanded (true) or collapsed.\n   */\n  Card.prototype.isOpen = function() {\n    return this.$element.hasClass('is-active');\n  };\n\n  /**\n   * Helper functions to return the main components of the card.\n   */\n  Card.prototype.getHeader = function () {\n    return this.$element.find('.el-card__header');\n  };\n\n  Card.prototype.getHeaderLabel = function () {\n    return this.getHeader().find('.el-card__title');\n  };\n\n  Card.prototype.getDetails = function () {\n    return this.$element.find('.el-card__content');\n  };\n\n  Card.prototype.getFooter = function () {\n    return this.$element.find('.el-card__footer');\n  };\n\n  // CARD PLUGIN DEFINITION\n  // =========================\n\n  var old = $.fn.card;\n\n  $.fn.card = function (option) {\n    return this.each(function () {\n      var $this = $(this),\n        data = $this.data('el.card'),\n        options = typeof option === 'object' && option;\n      if (!data) {\n        $this.data('el.card', (data = new Card(this, options)));\n      }\n      if (typeof option === 'string') {\n        data[option]();\n      }\n    });\n  };\n\n  $.fn.card.Constructor = Card;\n\n  // Card NO CONFLICT\n  // ===================\n\n  $.fn.card.noConflict = function () {\n    $.fn.card = old;\n    return this;\n  };\n\n})(jQuery);\n","/**\n * @file acquia_lift.cards.js  Initialization and Acquia Lift specific handling\n * of cards.\n */\n\n(function ($, Drupal) {\n  'use strict';\n\n  Drupal.behaviors.acquiaLiftCards = {\n    attach: function (context, settings) {\n      $('.el-card').once('acquia-lift-card', function() {\n        $(this).card();\n      });\n    }\n  }\n\n})(jQuery, Drupal);\n"]}