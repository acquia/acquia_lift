{"version":3,"sources":["../src/js/reports/Rickshaw.Graph.Axis.LabeledY.js","../src/js/reports/Rickshaw.Graph.ClickDetail.js","../src/js/reports/Rickshaw.Graph.TableLegend.js","../src/js/reports/acquia_lift.liftgraph.jquery.js","../src/js/reports/acquia_lift.reports.js"],"names":[],"mappings":"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","file":"acquia_lift.reports.js","sourcesContent":["/**\n * Add a label to the Y axis.\n * ----------------------------------------------------------------------------\n * The label will inherit the axis data name or can be explicitely defined.\n */\n\nRickshaw.namespace('Rickshaw.Graph.Axis.LabeledY');\n\nRickshaw.Graph.Axis.LabeledY = Rickshaw.Class.create(Rickshaw.Graph.Axis.Y, {\n  initialize: function(args) {\n\n    this.label = args.label || '';\n\n    this.graph = args.graph;\n    this.orientation = args.orientation || 'right';\n\n    this.pixelsPerTick = args.pixelsPerTick || 75;\n    if (args.ticks) this.staticTicks = args.ticks;\n    if (args.tickValues) this.tickValues = args.tickValues;\n\n    this.tickSize = args.tickSize || 4;\n    this.ticksTreatment = args.ticksTreatment || 'plain';\n\n    this.tickFormat = args.tickFormat || function(y) { return y };\n\n    this.berthRate = 0.10;\n\n    if (args.element) {\n\n      this.element = args.element;\n      this.vis = d3.select(args.element)\n        .append(\"svg:svg\")\n        .attr('class', 'rickshaw_graph y_axis');\n\n      this.element = this.vis[0][0];\n      this.element.style.position = 'relative';\n\n      this.setSize({ width: args.width, height: args.height });\n\n    } else {\n      this.vis = this.graph.vis;\n    }\n\n    var self = this;\n    this.graph.onUpdate( function() { self.render() } );\n  },\n  _drawAxis: function(scale) {\n    var axis = d3.svg.axis().scale(scale).orient(this.orientation);\n\n    axis.tickFormat(this.tickFormat);\n    if (this.tickValues) axis.tickValues(this.tickValues);\n\n    if (this.orientation == 'left') {\n      var berth = this.height * this.berthRate,\n          transform = 'translate(' + this.width + ', ' + berth + ')',\n          labelX = this.height / 4 * -1,\n          labelY = this.width / 3,\n          labelTransform = 'rotate(-90 50 50)';\n    }\n    else if (this.orientation == 'right') {\n      var labelX = this.height / 2,\n          labelY = this.width / 3 * 2,\n          labelTransform = 'rotate(90 50 50)';\n    }\n\n    if (this.element) {\n      this.vis.selectAll('*').remove();\n    }\n\n    this.vis\n      .append(\"svg:g\")\n      .attr(\"class\", [\"y_ticks\", this.ticksTreatment].join(\" \"))\n      .attr(\"transform\", transform)\n      .call(axis.ticks(this.ticks).tickSubdivide(0).tickSize(this.tickSize));\n\n    label = this.vis\n      .append(\"svg:text\")\n      .attr('class', 'y-axis-label')\n      .attr('x', labelX)\n      .attr('y', labelY)\n      .attr('text-anchor', 'middle')\n      .attr('transform', labelTransform)\n      .text(this.label);\n\n    return axis;\n  }\n});\n","/**\n * Create an tooltip showing data from all graphs.\n * ----------------------------------------------------------------------------\n */\n\nRickshaw.namespace('Rickshaw.Graph.ClickDetail');\n\nRickshaw.Graph.ClickDetail = Rickshaw.Class.create(Rickshaw.Graph.HoverDetail, {\n  initialize: function(args) {\n\n\t\tvar graph = this.graph = args.graph;\n\n    this.tooltipTimeout;\n    this.wiggleTimeout;\n    this.tooltipPinned = false;\n\n\t\tthis.xFormatter = args.xFormatter || function(x) {\n\t\t\treturn new Date( x * 1000 ).toUTCString();\n\t\t};\n\n\t\tthis.yFormatter = args.yFormatter || function(y) {\n\t\t\treturn y === null ? y : y.toFixed(2);\n\t\t};\n\n\t\tvar element = this.element = document.createElement('div');\n\t\telement.className = 'detail inactive';\n\n\t\tthis.visible = true;\n\t\tgraph.element.appendChild(element);\n\n\t\tthis.lastEvent = null;\n\t\tthis._addListeners();\n\n\t\tthis.onShow = args.onShow;\n\t\tthis.onHide = args.onHide;\n\t\tthis.onRender = args.onRender;\n\n\t\tthis.formatter = args.formatter || this.formatter;\n\n\t},\n  formatter: function(series, x, y, formattedX, formattedY, d) {\n    var self = this,\n        options = this.graph.rawData.options,\n        columns = this.graph.rawData.columns,\n        xKey = columns[options.columnX - 1],\n        yKey = columns[options.columnY - 1],\n        nameKey = columns[options.columnName - 1],\n        data = this.graph.rawData.groups,\n        time = new Date(x * 1000),\n        months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n        humanDate = months[time.getUTCMonth()] + ' ' + time.getDate() + ', ' + time.getFullYear()\n        head = function () {\n          var date = '<th>' + humanDate + '</th>',\n              variations = '';\n\n          for (var i = 0; i < self.graph.series.length; i++) {\n            variations += '<th style=\"background-color: ' + self.graph.series[i].color + ';\">' + self.graph.series[i].shortName + '</th>';\n          }\n\n          return '<thead><tr>' + date + variations + '</tr></thead>';\n        },\n        row = function (data) {\n          var output = '<td class=\"label\">' + data.property + '</td>';\n\n          for (var i = 0; i < data.data.length; i++) {\n            if (typeof data.data[i].active != 'undefined' && data.data[i].active == true) {\n              output = output + '<td class=\"active\">' + data.data[i].value + '</td>';\n            }\n            else {\n              output += '<td>' + data.data[i].value + '</td>';\n            }\n          }\n\n          return '<tr>' + output + '</tr>';\n        },\n        rows = function () {\n          var output = '';\n\n          // Build each row of data.\n          for (var key = 0; key < data[series.name].length; key++) {\n            if (data[series.name][key][xKey] == x) {\n              for (var property in data[series.name][key]) {\n                if (data[series.name][key].hasOwnProperty(property) && property != xKey && property != nameKey && property != nameKey + ' label') {\n                  var rowData = {property: property, data: []};\n\n                  for (var group in data) {\n                    if (data.hasOwnProperty(group)) {\n                      var information = {value: data[group][key][property]};\n                      if (series.name == data[group][key][nameKey]) {\n                        information.active = true;\n                      }\n                      rowData.data.push(information);\n                    }\n                  }\n\n                  output += row(rowData);\n                };\n              };\n            };\n          };\n\n          return '<tbody>' + output + '</tbody>';\n        };\n\n    return '<div class=\"lift-graph-detail\"><table class=\"lift-graph-detail-data\">' + head() + rows() + '</table></div>';\n  },\n  render: function (args) {\n    var $ = jQuery,\n        graph = this.graph,\n        points = args.points,\n        point = points.filter( function(p) { return p.active } ).shift();\n\n    if (point.value.y === null) return;\n\n    var formattedXValue = point.formattedXValue,\n        formattedYValue = point.formattedYValue;\n\n    this.element.innerHTML = '';\n    this.element.style.left = graph.x(point.value.x) + 'px';\n\n    var item = document.createElement('div');\n\n    item.className = 'item';\n    item.style.maxWidth = $(graph.element).width() + 'px';\n\n    // invert the scale if this series displays using a scale\n    var series = point.series,\n        actualY = series.scale ? series.scale.invert(point.value.y) : point.value.y;\n\n    item.innerHTML = this.formatter(series, point.value.x, actualY, formattedXValue, formattedYValue, point);\n\n    this.element.appendChild(item);\n\n    var dot = document.createElement('div'),\n        topPosition = this.graph.y(point.value.y0 + point.value.y);\n\n    dot.className = 'dot';\n    dot.style.top = topPosition + 'px';\n    dot.style.borderColor = series.color;\n\n    this.element.appendChild(dot);\n\n    if (point.active) {\n      item.classList.add('active');\n      dot.classList.add('active');\n    }\n\n    var $item = $(item),\n        itemWidth = parseInt($item.innerWidth()),\n        itemHeight = parseInt($item.innerHeight()),\n        itemMargin = parseInt($item.css('margin-top')) + parseInt($item.css('margin-bottom'));\n\n    item.style.top = Math.round(topPosition - itemHeight - itemMargin) + 'px';\n    item.style.left = Math.round(itemWidth / 2) * -1 + 'px';\n\n    // Assume left alignment until the element has been displayed and\n    // bounding box calculations are possible.\n    var alignables = [item];\n\n    alignables.forEach(function(el) {\n      el.classList.add('bottom');\n      el.classList.add('center');\n    });\n\n    this.show();\n\n    var alignment = this._calcLayout(item);\n\n    if (alignment.left > alignment.right) {\n      item.style.left = '';\n      item.classList.remove('center');\n      item.classList.remove('right');\n      item.classList.add('left');\n    }\n\n    if (alignment.right > alignment.left) {\n      item.style.left = '';\n      item.classList.remove('center');\n      item.classList.remove('left');\n      item.classList.add('right');\n    }\n\n    if (alignment.top === 0) {\n      item.style.top = topPosition + 'px';\n      item.classList.remove('bottom');\n      item.classList.add('top');\n    }\n\n    if (typeof this.onRender == 'function') {\n      this.onRender(args);\n    }\n  },\n  _calcLayout: function(element) {\n    var layout = {top: 0, right: 0, bottom: 0, left: 0},\n        parentRect = this.element.parentNode.getBoundingClientRect(),\n        rect = element.getBoundingClientRect();\n\n    if (rect.top > parentRect.top) {\n      layout.top += rect.top - parentRect.top;\n    }\n\n    if (rect.bottom < parentRect.bottom) {\n      layout.bottom += parentRect.bottom - rect.bottom;\n    }\n\n    if (rect.right > parentRect.right) {\n      layout.right += rect.right - parentRect.right;\n    }\n\n    if (rect.left < parentRect.left) {\n      layout.left += parentRect.left - rect.left;\n    }\n\n    return layout;\n  },\n  _addListeners: function() {\n    var $ = jQuery,\n        self = this,\n        $element = $(this.element);\n\n\t\tthis.graph.element.addEventListener(\n\t\t\t'mousemove',\n\t\t\tfunction(e) {\n        if (this.tooltipPinned === false && $element.hasClass('inactive')) {\n          clearTimeout(this.tooltipTimeout);\n          this.tooltipTimeout = window.setTimeout(function () {\n            self.visible = true;\n            self.update(e);\n          }, 350);\n        }\n        else if (this.tooltipPinned === false) {\n          this.wiggleTimeout = window.setTimeout(function () {\n            if (!$element.is(':hover')) {\n              self.hide();\n            }\n          }, 120);\n        }\n\t\t\t}.bind(this),\n\t\t\tfalse\n\t\t);\n\n    this.graph.element.addEventListener(\n      'click',\n      function(e) {\n        if (this.tooltipPinned === false) {\n          this.tooltipPinned = true;\n          clearTimeout(this.tooltipTimeout);\n          this.visible = true;\n          this.update(e);\n        }\n        else {\n          this.tooltipPinned = false;\n          this.hide();\n        }\n      }.bind(this),\n      false\n    );\n\n    this.graph.onUpdate( function() {\n      this.tooltipPinned = false;\n      this.hide();\n      this.update();\n    }.bind(this) );\n\n    this.graph.element.addEventListener(\n\t\t\t'mouseout',\n\t\t\tfunction(e) {\n        if (this.tooltipPinned === false) {\n          var self = this;\n\n  \t\t\t\tif (e.relatedTarget && !(e.relatedTarget.compareDocumentPosition(this.graph.element) & Node.DOCUMENT_POSITION_CONTAINS)) {\n            clearTimeout(this.tooltipTimeout);\n            this.tooltipTimeout = window.setTimeout(function () {\n              self.hide();\n            }, 500);\n  \t\t\t\t}\n        }\n\t\t\t}.bind(this),\n\t\t\tfalse\n\t\t);\n\t}\n});\n","/**\n * Append the legend to the first column of a table.\n * ----------------------------------------------------------------------------\n */\n\nRickshaw.namespace('Rickshaw.Graph.TableLegend');\n\nRickshaw.Graph.TableLegend = Rickshaw.Class.create(Rickshaw.Graph.Legend, {\n\n  initialize: function(args) {\n    this.element = args.element;\n    this.graph = args.graph;\n\n    this.render();\n\n    // we could bind this.render.bind(this) here\n    // but triggering the re-render would lose the added\n    // behavior of the series toggle\n    this.graph.onUpdate( function() {} );\n  },\n  render: function() {\n    var $ = jQuery,\n        self = this,\n        $label = $(this.element).find('thead > tr > th:first-child');\n\n    this.lines = [];\n\n    var series = this.graph.series\n      .map( function(s) { return s } );\n\n    series.forEach( function(s) {\n      self.addLine(s);\n    } );\n  },\n  addLine: function (series) {\n    var $ = jQuery,\n        self = this;\n\n    $(this.element).find('tbody > tr').each(function (index, row) {\n      var $cell = $(row).find('td:first-child');\n\n      if ($(row).find('td:first-child').text() == series.name) {\n\n        $cell.addClass('legend line');\n        if (series.disabled) {\n          $cell.addClass('disabled');\n        }\n        if (series.className) {\n          d3.select($cell[0]).classed(series.className, true);\n        }\n\n        var label = document.createElement('span');\n        label.className = 'label';\n        label.innerHTML = (series.shortName || series.name) + ':';\n\n        $cell.prepend(label);\n\n        $cell[0].series = series;\n\n        var swatch = document.createElement('div');\n        swatch.className = 'swatch';\n        swatch.style.backgroundColor = series.color;\n\n        $cell.prepend(swatch);\n\n        if (series.noLegend) {\n          $cell.css('display', 'none');\n        }\n\n        var _line = { element: $cell[0], series: series };\n        if (self.shelving) {\n          self.shelving.addAnchor(_line);\n          self.shelving.updateBehaviour();\n        }\n        if (self.highlighter) {\n          self.highlighter.addHighlightEvents(_line);\n        }\n        self.lines.push(_line);\n        return $cell[0];\n      }\n    });\n  }\n});\n","/**\n * Create a graph using data from a table element and Rickshaw.\n * ----------------------------------------------------------------------------\n */\n\n+function ($) {\n  'use strict';\n\n  // Assemble the object.\n  var liftGraph = function (element, options) {\n    this.type =\n    this.options =\n    this.enabled =\n    this.$element = null\n\n    this.init('liftGraph', element, options);\n  }\n\n  // Define the plugin defaults.\n  liftGraph.DEFAULTS = {\n    columnName: 1,\n    columnX: 2,\n    columnY: 3,\n    scheme: null,\n    renderer: null,\n    width: null,\n    height: null,\n    min: null,\n    max: null,\n    padding: null,\n    interpolation: 'linear',\n    stack: null\n  };\n\n  // Initialize the plugin functionality.\n  liftGraph.prototype.init = function (type, element, options) {\n    this.type = type\n    this.$element = $(element)\n    this.options = this.getOptions(options)\n    this.enabled = true\n\n    this.render();\n  }\n\n  // Enable the graph.\n  liftGraph.prototype.enable = function () {\n    this.enabled = true;\n  }\n\n  // Disable the graph.\n  liftGraph.prototype.disable = function () {\n    this.enabled = false;\n  }\n\n  // Get the option value of a data attribute.\n  liftGraph.prototype.dataAttr = function (key) {\n    return this.$element.attr('data-' + this.type + '-' + key);\n  }\n\n  // Get default values.\n  liftGraph.prototype.getDefaults = function () {\n    return liftGraph.DEFAULTS;\n  }\n\n  // Get options.\n  liftGraph.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), options);\n    for (var i in options) {\n      options[i] = this.dataAttr(i) || options[i];\n    }\n    return options;\n  }\n\n  // Update options.\n  liftGraph.prototype.updateOptions = function () {\n    var options = this.options;\n    for (var i in options) {\n      options[i] = this.dataAttr(i) || options[i];\n    }\n    return options;\n  }\n\n  // Collect the data from the table.\n  liftGraph.prototype.getData = function () {\n    var columns = [],\n        data = [],\n        grouped = {};\n\n    // Get the column names from the thead of the table.\n    this.$element.find('thead > tr > th').each(function (i) {\n      columns[i] = $(this).text();\n    });\n\n    // Structure the data in the table.\n    this.$element.find('tbody > tr').each(function (row) {\n      data[row] = {};\n\n      $(this).children('td').each(function (i) {\n        data[row][columns[i]] = $(this).text();\n\n        var label = $(this).attr('data-acquia-lift-variation-label');\n\n        if (label && label.length > 0) {\n          data[row][columns[i] + ' label'] = label;\n        }\n      });\n    });\n\n    // Get the grouping column name.\n    var groupName = columns[this.options.columnName - 1];\n\n    // Group data by a defined label..\n    for (var i = 0; i < data.length; i++) {\n      if (typeof grouped[data[i][groupName]] == 'undefined') {\n        grouped[data[i][groupName]] = [];\n      }\n      grouped[data[i][groupName]].push(data[i]);\n    }\n\n    this.columns = columns;\n    this.groups = grouped;\n  }\n\n  // Build graphing coordinates.\n  liftGraph.prototype.buildSeries = function (columnX, columnY, columnName) {\n    var groups = this.groups,\n        xKey = this.columns[columnX - 1],\n        yKey = this.columns[columnY - 1],\n        nameKey = this.columns[columnName - 1],\n        series = [],\n        results = $('.lift-graph-results > tbody > tr > td:first-child'),\n        counter = 0;\n\n    for (var key in groups) {\n      if (groups.hasOwnProperty(key)) {\n        var data = [];\n\n        for (var i = 0; i < groups[key].length; i++) {\n          data.push({\n            x: parseFloat(groups[key][i][xKey]),\n            y: parseFloat(groups[key][i][yKey])\n          });\n        }\n\n        series[counter] = {\n          name: key,\n          color: this.palette.color(),\n          data: data,\n          shortName: groups[key][0][nameKey + ' label'] || key\n        };\n\n        counter++;\n      }\n    }\n\n    this.series = series;\n  }\n\n  // Get the optimal number of palette colors.\n  liftGraph.prototype.getPalette = function () {\n    var color = new Rickshaw.Fixtures.Color(),\n        scheme = this.options.scheme || 'colorwheel',\n        configuration = {scheme: scheme},\n        count = 0;\n\n    // Get the number of individual graphs.\n    for (var key in this.groups) {\n      if (this.groups.hasOwnProperty(key)) {\n        count++;\n      }\n    }\n\n    if (color.schemes[scheme].length < count) {\n      configuration.interpolatedStopCount = count;\n    }\n\n    this.palette = new Rickshaw.Color.Palette(configuration);\n  }\n\n  // Get the graph object.\n  liftGraph.prototype.getGraph = function () {\n    var configuration = {\n      element: this.$graph[0],\n      series: this.series\n    };\n\n    // Set the custom renderer.\n    if (this.options.renderer != null) {\n      configuration.renderer = this.options.renderer;\n    }\n\n    // Set the custom width.\n    if (this.options.width != null) {\n      configuration.width = this.options.width;\n    }\n    else {\n      configuration.width = this.$graph.width();\n    }\n\n    // Set the custom height.\n    if (this.options.height != null) {\n      configuration.height = this.options.height;\n    }\n    else {\n      configuration.height = this.$graph.height();\n    }\n\n    // Set the custom min.\n    if (this.options.max != null) {\n      configuration.max = this.options.max;\n    }\n\n    // Set the custom max.\n    if (this.options.min != null) {\n      configuration.min = this.options.min;\n    }\n\n    // Set the custom padding.\n    if (this.options.padding != null) {\n      var data = this.options.padding.split(' '),\n          dataLength = data.length,\n          padding = {},\n          position = ['top', 'right', 'bottom', 'left'];\n\n      for (var i = 0; i < dataLength; i++) {\n        padding[position[i]] = parseFloat(data[i]);\n      }\n\n      configuration.padding = padding;\n    }\n\n    // Set the custom interpolation.\n    if (this.options.interpolation != null) {\n      configuration.interpolation = this.options.interpolation;\n    }\n\n    // Set custom stack.\n    if (this.options.stack != null) {\n      configuration.stack = this.options.stack;\n    }\n\n    this.graph = new Rickshaw.Graph(configuration);\n\n    // Add the raw data to the\n    this.graph.rawData = this;\n  }\n\n  // Get the x-axis.\n  liftGraph.prototype.setAxisX = function () {\n    this.axisX = new Rickshaw.Graph.Axis.Time({\n      graph: this.graph,\n      ticksTreatment: 'label-below'\n    });\n  }\n\n  // Get the y-axis.\n  liftGraph.prototype.setAxisY = function () {\n    var orientation = $('html').attr('dir') == 'rtl' ? 'right' : 'left';\n\n    this.axisY = new Rickshaw.Graph.Axis.LabeledY({\n      element: this.$axisY[0],\n      orientation: orientation,\n      label: this.columns[this.options.columnY - 1],\n      graph: this.graph\n    });\n  }\n\n  // Get the legend.\n  liftGraph.prototype.setLegend = function () {\n    this.legend = new Rickshaw.Graph.TableLegend({\n      element: this.$legend[0],\n      graph: this.graph\n    });\n  }\n\n  // Activate hover details.\n  liftGraph.prototype.setHoverDetail = function () {\n    this.hoverDetail = new Rickshaw.Graph.ClickDetail({\n      graph: this.graph\n    });\n  }\n\n  // Allow the narowing of data with a range slider.\n  liftGraph.prototype.setRangeSlider = function () {\n    this.rangeSlider = new Rickshaw.Graph.RangeSlider({\n      graph: this.graph,\n      element: this.$rangeSlider[0]\n    });\n\n    this.rangeSlider.update = function() {\n      var element = this.element,\n          graph = this.graph,\n          time = new Rickshaw.Fixtures.Time(),\n          unit = time.units[3],\n          values = $(element).slider('option', 'values'),\n          text = [\n            unit.formatter(new Date(values[0] * 1000)),\n            unit.formatter(new Date(values[1] * 1000))\n          ],\n          domain = graph.dataDomain(),\n          $handles = $(element).children('.ui-slider-handle');\n\n      // Add a span for the tooltip in each handle.\n      $handles.once('acquia-lift-handle-value', function() {\n        $(this).html('<span class=\"acquia-lift-handle-value\"></span>');\n      });\n\n      $(element).slider('option', 'min', domain[0]);\n      $(element).slider('option', 'max', domain[1]);\n\n      if (graph.window.xMin == null) {\n        values[0] = domain[0];\n        text[0] = unit.formatter(new Date(values[0] * 1000));\n      }\n      if (graph.window.xMax == null) {\n        values[1] = domain[1];\n        text[1] = unit.formatter(new Date(values[1] * 1000));\n      }\n\n      $(element).slider('option', 'values', values);\n      $handles.first().children('.acquia-lift-handle-value').text(text[0]);\n      $handles.last().children('.acquia-lift-handle-value').text(text[1]);\n    }\n  }\n\n  // Allow a user to toggle graph data via the legend.\n  liftGraph.prototype.setSeriesToggle = function () {\n    this.$legend.addClass('toggle-enabled');\n    this.seriesToggle = new Rickshaw.Graph.Behavior.Series.Toggle({\n      graph: this.graph,\n      legend: this.legend\n    });\n  }\n\n  // Format the elements of the graph.\n  liftGraph.prototype.build = function () {\n    this.$graph = $('<div class=\"lift-graph-graph\" role=\"presentation\"></div>');\n    this.$axisY = $('<div class=\"lift-graph-axis-y\" role=\"presentation\"></div>');\n    this.$rangeSlider = $('<div class=\"lift-graph-range-slider\"></div>');\n    this.$legend = this.$element.siblings('.lift-graph-result').children('table.lift-graph-result-data');\n\n    this.$element.addClass('lift-graph-table')\n      .wrap('<div class=\"lift-graph-container\"></div>')\n      .before(this.$axisY)\n      .before(this.$graph)\n      .before(this.$rangeSlider);\n  }\n\n  // Hide the table.\n  liftGraph.prototype.hideTable = function () {\n    this.$element.hide();\n  }\n\n  // Show the table.\n  liftGraph.prototype.showTable = function () {\n    this.$element.show();\n  }\n\n  // Render the graph.\n  liftGraph.prototype.render = function () {\n    this.getData();\n    this.getPalette();\n    this.buildSeries(this.options.columnX, this.options.columnY, this.options.columnName);\n    this.build();\n    this.getGraph();\n    this.setAxisX();\n    this.setAxisY();\n    this.setLegend();\n    this.setHoverDetail();\n    this.setRangeSlider();\n    this.graph.render();\n    this.hideTable();\n  }\n\n  liftGraph.prototype.update = function () {\n    // Rebuild the data.\n    this.options = this.updateOptions();\n    this.getData();\n    this.getPalette();\n    this.buildSeries(this.options.columnX, this.options.columnY, this.options.columnName);\n\n    var graph = this.graph,\n        series = this.series;\n\n    // Update the series manually as Rickshaw does not do that by itself.\n    $(graph.series).each(function(i){\n        graph.series[i] = series[i];\n    });\n\n    // Update the Y axis label.\n    this.axisY.label = this.columns[this.options.columnY - 1];\n\n    this.graph.update();\n  }\n\n  // Define the jQuery plugin.\n  var old = $.fn.railroad;\n\n  $.fn.liftGraph = function (option) {\n    return this.each(function () {\n      var $this = $(this),\n          data = $this.data('lift.graph');\n\n      if (!data) $this.data('lift.graph', (data = new liftGraph(this, option)));\n      if (typeof option == 'string') data[option]($this);\n    });\n  }\n\n  $.fn.liftGraph.Constrictor = liftGraph;\n\n  $.fn.liftGraph.noConflict = function () {\n    $.fn.liftGraph = old;\n    return this;\n  }\n}(Drupal.jQuery);\n","/**\n * Functionality related specifically to the Acquia Lift reports.\n */\n\n(function ($, Drupal) {\n  \"use strict\";\n\n  Drupal.behaviors.acquiaLiftReports = {\n    attach: function (context, settings) {\n      // Generate graphs and switches for the A/B statistics.\n      $('.lift-statistics').once('acquiaLiftReports', function () {\n        var $statistics = $(this),\n            $data = $statistics.find('table[data-lift-statistics]'),\n            campaign = $data.attr('data-acquia-lift-campaign'),\n            $goalSelect = $('.acquia-lift-report-section-options .form-item-goal select'),\n            $metricSelect = $('.acquia-lift-report-section-options .form-item-metric select'),\n            metric = $metricSelect.val(),\n            // Find the table column that matches the metric value.\n            metricColumn = function() {\n              var $heads = $data.find('thead > tr > th'),\n                  column = $data.find('thead > tr > th[data-conversion-metric=\"' + metric + '\"]')[0];\n\n              return $heads.index(column) + 1;\n            };\n\n        // Format the initial data.\n        $data.liftGraph();\n\n        // Load a new report if the goal is changed.\n        $goalSelect.change(function() {\n          // Construct the GET path.\n          var args = {\n                campaign: campaign,\n                goal: $(this).val()\n              },\n              path = Drupal.settings.basePath + Drupal.settings.pathPrefix + 'acquia_lift/reports/conversion?' + $.param(args);\n\n          // Get the new report and replace the existing report(s) with it.\n          $.get(path, function (html) {\n            var $html = $(html);\n            $statistics.find('.lift-statistic-category').remove();\n            $statistics.prepend($html);\n            // Simultaneously replace $data with the new table.\n            $data = $html.find('table[data-lift-statistics]');\n            // Make sure the proper metric column is set and render the graph.\n            $data.attr('data-liftgraph-columny', metricColumn()).liftGraph();\n          });\n        })\n\n        // Attach a data column to a metric option.\n        // Change the data fed to the y-axis and update the graph.\n        $metricSelect.change(function () {\n          // Set the new metric value.\n          metric = $(this).val();\n\n          // Change the data-liftgraph-columny attribute and rebuild the graph.\n          $data.attr('data-liftgraph-columny', metricColumn())\n            .liftGraph('update');\n        })\n      });\n\n      // Hide the submit button.\n      $('.acquia-lift-report-section-options .form-submit').hide();\n    }\n  }\n\n}(Drupal.jQuery, Drupal));\n"]}