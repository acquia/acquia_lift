{"version":3,"sources":["../src/js/Rickshaw.Graph.Axis.TimeElement.js","../src/js/Rickshaw.Graph.Axis.LabeledY.js","../src/js/Rickshaw.Graph.ClickDetail.js","../src/js/Rickshaw.Graph.TableLegend.js","../src/js/acquia_lift.report.ab.js"],"names":[],"mappings":"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","file":"acquia_lift.report.ab.js","sourcesContent":["/**\n * Create an x-axis with formatted date labels.\n * ----------------------------------------------------------------------------\n */\n\nRickshaw.namespace('Rickshaw.Graph.Axis.TimeElement');\n\nRickshaw.Graph.Axis.TimeElement = function(args) {\n\n  var self = this,\n      berthRate = 0.10,\n      time = args.timeFixture || new Rickshaw.Fixtures.Time();\n\n  this.initialize = function(args) {\n\n    this.graph = args.graph;\n    this.elements = [];\n    this.orientation = args.orientation || 'top';\n\n    this.pixelsPerTick = args.pixelsPerTick || 75;\n    if (args.ticks) this.staticTicks = args.ticks;\n    if (args.tickValues) this.tickValues = args.tickValues;\n\n    this.tickSize = args.tickSize || 4;\n    this.ticksTreatment = args.ticksTreatment || 'plain';\n\n    if (args.element) {\n\n      this.element = args.element;\n      this._discoverSize(args.element, args);\n\n      this.vis = d3.select(args.element)\n        .append(\"svg:svg\")\n        .attr('height', this.height)\n        .attr('width', this.width)\n        .attr('class', 'rickshaw_graph x_axis_d3');\n\n      this.element = this.vis[0][0];\n      this.element.style.position = 'relative';\n\n      this.setSize({ width: args.width, height: args.height });\n\n    } else {\n      this.vis = this.graph.vis;\n    }\n\n    this.graph.onUpdate( function() { self.render() } );\n  };\n\n  this.setSize = function(args) {\n\n    args = args || {};\n    if (!this.element) return;\n\n    this._discoverSize(this.element.parentNode, args);\n\n    this.vis\n      .attr('height', this.height)\n      .attr('width', this.width * (1 + berthRate));\n\n    var berth = Math.floor(this.width * berthRate / 2);\n    this.element.style.left = -1 * berth + 'px';\n  };\n\n  this.appropriateTimeUnit = function() {\n\n    var unit,\n        units = time.units,\n        domain = this.graph.x.domain(),\n        rangeSeconds = domain[1] - domain[0];\n\n    units.forEach( function(u) {\n      if (Math.floor(rangeSeconds / u.seconds) >= 2) {\n        unit = unit || u;\n      }\n    });\n\n    return (unit || time.units[time.units.length - 1]);\n  };\n\n  this.render = function() {\n\n    this.elements.forEach( function(e) {\n      e.parentNode.removeChild(e);\n    } );\n\n    var unit = this.fixedTimeUnit || this.appropriateTimeUnit();\n\n    if (this._renderWidth !== undefined && this.graph.width !== this._renderWidth) this.setSize({ auto: true });\n\n    var axis = d3.svg.axis().scale(this.graph.x).orient(this.orientation);\n    axis.tickFormat( args.tickFormat || function(x) { return unit.formatter(new Date(x * 1000)) } );\n    if (this.tickValues) axis.tickValues(this.tickValues);\n\n    this.ticks = this.staticTicks || Math.floor(this.graph.width / this.pixelsPerTick);\n\n    var berth = Math.floor(this.width * berthRate / 2) || 0,\n        transform;\n\n    if (this.orientation == 'top') {\n      var yOffset = this.height || this.graph.height;\n      transform = 'translate(' + berth + ',' + yOffset + ')';\n    } else {\n      transform = 'translate(' + berth + ', 0)';\n    }\n\n    if (this.element) {\n      this.vis.selectAll('*').remove();\n    }\n\n    this.vis\n      .append(\"svg:g\")\n      .attr(\"class\", [\"x_ticks_d3\", this.ticksTreatment].join(\" \"))\n      .attr(\"transform\", transform)\n      .call(axis.ticks(this.ticks).tickSubdivide(0).tickSize(this.tickSize));\n\n    var gridSize = (this.orientation == 'bottom' ? 1 : -1) * this.graph.height;\n\n    this.graph.vis\n      .append(\"svg:g\")\n      .attr(\"class\", \"x_grid_d3\")\n      .call(axis.ticks(this.ticks).tickSubdivide(0).tickSize(gridSize))\n      .selectAll('text')\n      .each(function() {\n        this.parentNode.setAttribute('data-x-value', this.textContent)\n      });\n\n    this._renderHeight = this.graph.height;\n  };\n\n  this._discoverSize = function(element, args) {\n\n    if (typeof window !== 'undefined') {\n\n      var style = window.getComputedStyle(element, null),\n          elementHeight = parseInt(style.getPropertyValue('height'), 10);\n\n      if (!args.auto) {\n        var elementWidth = parseInt(style.getPropertyValue('width'), 10);\n      }\n    }\n\n    this.width = (args.width || elementWidth || this.graph.width) * (1 + berthRate);\n    this.height = args.height || elementHeight || 40;\n  };\n\n  this.initialize(args);\n};\n","/**\n * Add a label to the Y axis.\n * ----------------------------------------------------------------------------\n * The label will inherit the axis data name or can be explicitely defined.\n */\n\nRickshaw.namespace('Rickshaw.Graph.Axis.LabeledY');\n\nRickshaw.Graph.Axis.LabeledY = Rickshaw.Class.create(Rickshaw.Graph.Axis.Y, {\n  initialize: function(args) {\n\n    this.label = args.label || '';\n\n    this.graph = args.graph;\n    this.orientation = args.orientation || 'right';\n\n    this.pixelsPerTick = args.pixelsPerTick || 75;\n    if (args.ticks) this.staticTicks = args.ticks;\n    if (args.tickValues) this.tickValues = args.tickValues;\n\n    this.tickSize = args.tickSize || 4;\n    this.ticksTreatment = args.ticksTreatment || 'plain';\n\n    this.tickFormat = args.tickFormat || function(y) { return y };\n\n    this.berthRate = 0.10;\n\n    if (args.element) {\n\n      this.element = args.element;\n      this.vis = d3.select(args.element)\n        .append(\"svg:svg\")\n        .attr('class', 'rickshaw_graph y_axis');\n\n      this.element = this.vis[0][0];\n      this.element.style.position = 'relative';\n\n      this.setSize({ width: args.width, height: args.height });\n\n    } else {\n      this.vis = this.graph.vis;\n    }\n\n    var self = this;\n    this.graph.onUpdate( function() { self.render() } );\n  },\n  _drawAxis: function(scale) {\n    var axis = d3.svg.axis().scale(scale).orient(this.orientation);\n\n    axis.tickFormat(this.tickFormat);\n    if (this.tickValues) axis.tickValues(this.tickValues);\n\n    if (this.orientation == 'left') {\n      var berth = this.height * this.berthRate,\n          transform = 'translate(' + this.width + ', ' + berth + ')';\n    }\n\n    if (this.element) {\n      this.vis.selectAll('*').remove();\n    }\n\n    this.vis\n      .append(\"svg:g\")\n      .attr(\"class\", [\"y_ticks\", this.ticksTreatment].join(\" \"))\n      .attr(\"transform\", transform)\n      .call(axis.ticks(this.ticks).tickSubdivide(0).tickSize(this.tickSize));\n\n    label = this.vis\n      .append(\"svg:text\")\n      .attr('class', 'y-axis-label')\n      .attr('x', this.height / 4 * -1)\n      .attr('y', this.width / 3)\n      .attr('text-anchor', 'middle')\n      .attr('transform', 'rotate(-90 50 50)')\n      .text(this.label);\n\n    return axis;\n  }\n});\n","/**\n * Create an tooltip showing data from all graphs.\n * ----------------------------------------------------------------------------\n */\n\nRickshaw.namespace('Rickshaw.Graph.ClickDetail');\n\nRickshaw.Graph.ClickDetail = Rickshaw.Class.create(Rickshaw.Graph.HoverDetail, {\n  formatter: function(series, x, y, formattedX, formattedY, d) {\n    var self = this,\n        options = this.graph.rawData.options,\n        columns = this.graph.rawData.columns,\n        xKey = columns[options.columnX - 1],\n        yKey = columns[options.columnY - 1],\n        nameKey = columns[options.columnName - 1],\n        data = this.graph.rawData.groups,\n        time = new Date(x * 1000),\n        months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'April', 'September', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n        humanDate = months[time.getUTCMonth()] + ' ' + time.getDate() + ', ' + time.getFullYear()\n        head = function () {\n          var date = '<th>' + humanDate + '</th>',\n              variations = '';\n\n          for (var i = 0; i < self.graph.series.length; i++) {\n            variations = variations + '<th style=\"background-color: ' + self.graph.series[i].color + ';\">' + self.graph.series[i].shortName + '</th>';\n          }\n\n          return '<thead><tr>' + date + variations + '</tr></thead>';\n        },\n        row = function (data) {\n          var output = '<td class=\"label\">' + data.property + '</td>';\n\n          for (var i = 0; i < data.data.length; i++) {\n            if (typeof data.data[i].active != 'undefined' && data.data[i].active == true) {\n              output = output + '<td class=\"active\">' + data.data[i].value + '</td>';\n            }\n            else {\n              output = output + '<td>' + data.data[i].value + '</td>';\n            }\n          }\n\n          return '<tr>' + output + '</tr>';\n        },\n        rows = function () {\n          var output = '';\n\n          // Build each row of data.\n          for (var key = 0; key < data[series.name].length; key++) {\n            if (data[series.name][key][xKey] == x) {\n              for (var property in data[series.name][key]) {\n                if (data[series.name][key].hasOwnProperty(property) && property != xKey && property != nameKey) {\n                  var rowData = {property: property, data: []};\n\n                  for (var group in data) {\n                    if (data.hasOwnProperty(group)) {\n                      var information = {value: data[group][key][property]};\n                      if (series.name == data[group][key][nameKey]) {\n                        information.active = true;\n                      }\n                      rowData.data.push(information);\n                    }\n                  }\n\n                  output = output + row(rowData);\n                };\n              };\n            };\n          };\n\n          return '<tbody>' + output + '</tbody>';\n        };\n\n    return '<div class=\"lift-graph-detail\"><table class=\"lift-graph-detail-data\">' + head() + rows() + '</table></div>';\n  },\n  render: function (args) {\n    var $ = jQuery,\n        graph = this.graph,\n        points = args.points,\n        point = points.filter( function(p) { return p.active } ).shift();\n\n    if (point.value.y === null) return;\n\n    var formattedXValue = point.formattedXValue,\n        formattedYValue = point.formattedYValue;\n\n    this.element.innerHTML = '';\n    this.element.style.left = graph.x(point.value.x) + 'px';\n\n    var item = document.createElement('div');\n\n    item.className = 'item';\n    item.style.maxWidth = $(graph.element).width() + 'px';\n\n    // invert the scale if this series displays using a scale\n    var series = point.series,\n        actualY = series.scale ? series.scale.invert(point.value.y) : point.value.y;\n\n    item.innerHTML = this.formatter(series, point.value.x, actualY, formattedXValue, formattedYValue, point);\n\n    this.element.appendChild(item);\n\n    var dot = document.createElement('div'),\n        topPosition = this.graph.y(point.value.y0 + point.value.y);\n\n    dot.className = 'dot';\n    dot.style.top = topPosition + 'px';\n    dot.style.borderColor = series.color;\n\n    this.element.appendChild(dot);\n\n    if (point.active) {\n      item.classList.add('active');\n      dot.classList.add('active');\n    }\n\n    var $item = $(item),\n        itemWidth = parseInt($item.innerWidth()),\n        itemHeight = parseInt($item.innerHeight()),\n        itemMargin = parseInt($item.css('margin-top')) + parseInt($item.css('margin-bottom'));\n\n    item.style.top = Math.round(topPosition - itemHeight - itemMargin) + 'px';\n    item.style.left = Math.round(itemWidth / 2) * -1 + 'px';\n\n    // Assume left alignment until the element has been displayed and\n    // bounding box calculations are possible.\n    var alignables = [item];\n\n    alignables.forEach(function(el) {\n      el.classList.add('bottom');\n      el.classList.add('center');\n    });\n\n    this.show();\n\n    var alignment = this._calcLayout(item);\n\n    if (alignment.left > alignment.right) {\n      item.style.left = 'auto';\n      item.classList.remove('center');\n      item.classList.remove('right');\n      item.classList.add('left');\n    }\n\n    if (alignment.right > alignment.left) {\n      item.style.left = 'auto';\n      item.classList.remove('center');\n      item.classList.remove('left');\n      item.classList.add('right');\n    }\n\n    if (alignment.top === 0) {\n      item.style.top = topPosition + 'px';\n      item.classList.remove('bottom');\n      item.classList.add('top');\n    }\n\n    if (typeof this.onRender == 'function') {\n      this.onRender(args);\n    }\n  },\n  _calcLayout: function(element) {\n    var layout = {top: 0, right: 0, bottom: 0, left: 0},\n        parentRect = this.element.parentNode.getBoundingClientRect(),\n        rect = element.getBoundingClientRect();\n\n    if (rect.top > parentRect.top) {\n      layout.top += rect.top - parentRect.top;\n    }\n\n    if (rect.bottom < parentRect.bottom) {\n      layout.bottom += parentRect.bottom - rect.bottom;\n    }\n\n    if (rect.right > parentRect.right) {\n      layout.right += rect.right - parentRect.right;\n    }\n\n    if (rect.left < parentRect.left) {\n      layout.left += parentRect.left - rect.left;\n    }\n\n    return layout;\n  },\n  _addListeners: function() {\n    this.graph.element.addEventListener(\n      'click',\n      function(e) {\n        this.visible = true;\n        this.update(e);\n      }.bind(this),\n      false\n    );\n\n    this.graph.onUpdate( function() { this.update() }.bind(this) );\n  }\n});\n","/**\n * Append the legend to the first column of a table.\n * ----------------------------------------------------------------------------\n */\n\nRickshaw.namespace('Rickshaw.Graph.TableLegend');\n\nRickshaw.Graph.TableLegend = Rickshaw.Class.create(Rickshaw.Graph.Legend, {\n  // className: 'rickshaw_legend',\n\n  initialize: function(args) {\n    this.element = args.element;\n    this.graph = args.graph;\n\n    this.render();\n\n    // we could bind this.render.bind(this) here\n    // but triggering the re-render would lose the added\n    // behavior of the series toggle\n    this.graph.onUpdate( function() {} );\n  },\n\n  render: function() {\n    var $ = jQuery,\n        self = this,\n        $label = $(this.element).find('thead > tr > th:first-child');\n\n    // Add a new column label for the legend.\n    $(this.element).find('thead > tr').prepend('<th>Legend</th>');\n\n    this.lines = [];\n\n    var series = this.graph.series\n      .map( function(s) { return s } );\n\n    series.forEach( function(s) {\n      self.addLine(s);\n    } );\n  },\n  addLine: function (series) {\n    var $ = jQuery,\n        self = this;\n\n    $(this.element).find('tbody > tr').each(function (index, row) {\n      if ($(row).find('td:first-child').text() == series.name) {\n        var line = document.createElement('td');\n\n        $(row).prepend(line);\n\n        line.className = 'legend line';\n        if (series.disabled) {\n          line.className += ' disabled';\n        }\n        if (series.className) {\n          d3.select(line).classed(series.className, true);\n        }\n\n        var swatch = document.createElement('div');\n        swatch.className = 'swatch';\n        swatch.style.backgroundColor = series.color;\n\n        line.appendChild(swatch);\n\n        var label = document.createElement('span');\n        label.className = 'label';\n        label.innerHTML = series.shortName || series.name;\n\n        line.appendChild(label);\n\n        line.series = series;\n\n        if (series.noLegend) {\n          line.style.display = 'none';\n        }\n\n        var _line = { element: line, series: series };\n        if (self.shelving) {\n          self.shelving.addAnchor(_line);\n          self.shelving.updateBehaviour();\n        }\n        if (self.highlighter) {\n          self.highlighter.addHighlightEvents(_line);\n        }\n        self.lines.push(_line);\n        return line;\n      }\n    });\n  }\n});\n","/**\n * Create a graph using data from a table element and Rickshaw.\n * ----------------------------------------------------------------------------\n */\n\n+function ($) {\n  'use strict';\n\n  // Assemble the object.\n  var liftGraph = function (element, options) {\n    this.type =\n    this.options =\n    this.enabled =\n    this.$element = null\n\n    this.init('liftGraph', element, options);\n  }\n\n  // Define the plugin defaults.\n  liftGraph.DEFAULTS = {\n    columnName: 1,\n    columnX: 2,\n    columnY: 3,\n    scheme: null,\n    renderer: null,\n    width: null,\n    height: null,\n    min: null,\n    max: null,\n    padding: null,\n    interpolation: 'linear',\n    stack: null\n  };\n\n  // Initialize the plugin functionality.\n  liftGraph.prototype.init = function (type, element, options) {\n    this.type = type\n    this.$element = $(element)\n    this.options = this.getOptions(options)\n    this.enabled = true\n\n    this.render();\n  }\n\n  // Enable the graph.\n  liftGraph.prototype.enable = function () {\n    this.enabled = true;\n  }\n\n  // Disable the graph.\n  liftGraph.prototype.disable = function () {\n    this.enabled = false;\n  }\n\n  // Get the option value of a data attribute.\n  liftGraph.prototype.dataAttr = function (key) {\n    return this.$element.attr('data-' + this.type + '-' + key);\n  }\n\n  // Get default values.\n  liftGraph.prototype.getDefaults = function () {\n    return liftGraph.DEFAULTS;\n  }\n\n  // Reset the table.\n  liftGraph.prototype.destroy = function () {\n    this.hide().$element.off('.' + this.type).removeData('lift.' + this.type);\n  }\n\n  // Get options.\n  liftGraph.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), options);\n    for (var i in options) {\n      options[i] = this.dataAttr(i) || options[i];\n    }\n    return options;\n  }\n\n  // Collect the data from the table.\n  liftGraph.prototype.getData = function () {\n    var columns = [],\n        data = [],\n        grouped = {};\n\n    // Get the column names from the thead of the table.\n    this.$element.find('thead > tr > th').each(function (i) {\n      columns[i] = $(this).text();\n    });\n\n    // Structure the data in the table.\n    this.$element.find('tbody > tr').each(function (row) {\n      data[row] = {};\n\n      $(this).children('td').each(function (i) {\n        data[row][columns[i]] = $(this).text();\n      });\n    });\n\n    // Get the grouping column name.\n    var groupName = columns[this.options.columnName - 1];\n\n    // Group data by a defined label..\n    for (var i = 0; i < data.length; i++) {\n      if (typeof grouped[data[i][groupName]] == 'undefined') {\n        grouped[data[i][groupName]] = [];\n      }\n      grouped[data[i][groupName]].push(data[i]);\n    }\n\n    this.columns = columns;\n    this.groups = grouped;\n  }\n\n  // Build graphing coordinates.\n  liftGraph.prototype.buildSeries = function (columnX, columnY) {\n    var groups = this.groups,\n        xKey = this.columns[columnX - 1],\n        yKey = this.columns[columnY - 1],\n        series = [],\n        results = $('.lift-graph-results > tbody > tr > td:first-child'),\n        counter = 0;\n\n    for (var key in groups) {\n      if (groups.hasOwnProperty(key)) {\n        var data = [];\n\n        for (var i = 0; i < groups[key].length; i++) {\n          data.push({\n            x: parseFloat(groups[key][i][xKey]),\n            y: parseFloat(groups[key][i][yKey])\n          });\n        }\n\n        series[counter] = {\n          name: key,\n          color: this.palette.color(),\n          data: data,\n          shortName: key.substring(0, 7) == 'control' ? 'Control' : 'V' + (counter + 1)\n        };\n\n        counter++;\n      }\n    }\n\n    this.series = series;\n  }\n\n  // Get the optimal number of palette colors.\n  liftGraph.prototype.getPalette = function () {\n    var color = new Rickshaw.Fixtures.Color(),\n        scheme = this.options.scheme || 'colorwheel',\n        configuration = {scheme: scheme},\n        count = 0;\n\n    // Get the number of individual graphs.\n    for (var key in this.groups) {\n      if (this.groups.hasOwnProperty(key)) {\n        count++;\n      }\n    }\n\n    if (color.schemes[scheme].length < count) {\n      configuration.interpolatedStopCount = count;\n    }\n\n    this.palette = new Rickshaw.Color.Palette(configuration);\n  }\n\n  // Get the graph object.\n  liftGraph.prototype.getGraph = function () {\n    var configuration = {\n      element: this.$graph[0],\n      series: this.series\n    };\n\n    // Set the custom renderer.\n    if (this.options.renderer != null) {\n      configuration.renderer = this.options.renderer;\n    }\n\n    // Set the custom width.\n    if (this.options.width != null) {\n      configuration.width = this.options.width;\n    }\n    else {\n      configuration.width = this.$graph.width();\n    }\n\n    // Set the custom height.\n    if (this.options.height != null) {\n      configuration.height = this.options.height;\n    }\n    else {\n      configuration.height = this.$graph.height();\n    }\n\n    // Set the custom min.\n    if (this.options.max != null) {\n      configuration.max = this.options.max;\n    }\n\n    // Set the custom max.\n    if (this.options.min != null) {\n      configuration.min = this.options.min;\n    }\n\n    // Set the custom padding.\n    if (this.options.padding != null) {\n      var data = this.options.padding.split(' '),\n          dataLength = data.length,\n          padding = {},\n          position = ['top', 'right', 'bottom', 'left'];\n\n      for (var i = 0; i < dataLength; i++) {\n        padding[position[i]] = parseFloat(data[i]);\n      }\n\n      configuration.padding = padding;\n    }\n\n    // Set the custom interpolation.\n    if (this.options.interpolation != null) {\n      configuration.interpolation = this.options.interpolation;\n    }\n\n    // Set custom stack.\n    if (this.options.stack != null) {\n      configuration.stack = this.options.stack;\n    }\n\n    this.graph = new Rickshaw.Graph(configuration);\n\n    // Add the raw data to the\n    this.graph.rawData = this;\n  }\n\n  // Get the x-axis.\n  liftGraph.prototype.setAxisX = function () {\n    this.axisX = new Rickshaw.Graph.Axis.TimeElement({\n      element: this.$axisX[0],\n      orientation: 'bottom',\n      graph: this.graph\n    });\n  }\n\n  // Get the y-axis.\n  liftGraph.prototype.setAxisY = function () {\n    this.axisY = new Rickshaw.Graph.Axis.LabeledY({\n      element: this.$axisY[0],\n      orientation: 'left',\n      label: this.columns[this.options.columnY - 1],\n      graph: this.graph\n    });\n  }\n\n  // Get the legend.\n  liftGraph.prototype.setLegend = function () {\n    this.legend = new Rickshaw.Graph.TableLegend({\n      element: this.$legend[0],\n      graph: this.graph\n    });\n  }\n\n  // Get the range slider.\n  liftGraph.prototype.setRangeSlider = function () {\n    this.rangeSlider = new Rickshaw.Graph.RangeSlider({\n      element: this.$rangeSlider[0],\n      graph: this.graph\n    });\n  }\n\n  // Activate hover details.\n  liftGraph.prototype.setHoverDetail = function () {\n    this.hoverDetail = new Rickshaw.Graph.ClickDetail({\n      graph: this.graph\n    });\n  }\n\n  // Highlight a series when hovering on legend.\n  liftGraph.prototype.setSeriesHighlight = function () {\n    this.seriesHighlight = new Rickshaw.Graph.Behavior.Series.Highlight({\n      graph: this.graph,\n      legend: this.legend\n    });\n  }\n\n  // Allow a user to togle graph data via the legend.\n  liftGraph.prototype.setSeriesToggle = function () {\n    this.$legend.addClass('toggle-enabled');\n    this.seriesToggle = new Rickshaw.Graph.Behavior.Series.Toggle({\n      graph: this.graph,\n      legend: this.legend\n    });\n  }\n\n  // Format the elements of the graph.\n  liftGraph.prototype.build = function () {\n    this.$graph = $('<div class=\"lift-graph-graph\" role=\"presentation\"></div>');\n    this.$axisY = $('<div class=\"lift-graph-axis-y\" role=\"presentation\"></div>');\n    this.$axisX = $('<div class=\"lift-graph-axis-x\" role=\"presentation\"></div>');\n    this.$legend = $('table.lift-graph-result-data');\n    this.$rangeSlider = $('<div class=\"lift-graph-range-slider\" role=\"presentation\"></div>');\n\n    this.$element.addClass('lift-graph-table')\n      .wrap('<div class=\"lift-graph-container\"></div>')\n      .before(this.$axisY)\n      .before(this.$graph)\n      .before(this.$axisX)\n      .before(this.$rangeSlider);\n  }\n\n  // Hide the table.\n  liftGraph.prototype.hideTable = function () {\n    this.$element.hide();\n  }\n\n  // Show the table.\n  liftGraph.prototype.showTable = function () {\n    this.$element.show();\n  }\n\n  // Render the graph.\n  liftGraph.prototype.render = function () {\n    this.getData();\n    this.getPalette();\n    this.buildSeries(this.options.columnX, this.options.columnY);\n    this.build();\n    this.getGraph();\n    this.setAxisX();\n    this.setAxisY();\n    this.setLegend();\n    this.setRangeSlider();\n    this.setHoverDetail();\n    this.setSeriesHighlight();\n    this.setSeriesToggle();\n    this.graph.render();\n    this.hideTable();\n  }\n\n  // Define the jQuery plugin.\n  var old = $.fn.railroad;\n\n  $.fn.liftGraph = function (options) {\n    return this.each(function () {\n      var $this = $(this),\n          data = $this.data('lift.graph'),\n          options = typeof options == 'object' && option;\n\n      if (!data && options == 'destroy') return;\n      if (!data) $this.data('lift.graph', (data = new liftGraph(this, options)));\n      if (typeof option == 'string') data[option]();\n    });\n  }\n\n  $.fn.liftGraph.Constrictor = liftGraph;\n\n  $.fn.liftGraph.noConflict = function () {\n    $.fn.liftGraph = old;\n    return this;\n  }\n}(jQuery);\n"]}