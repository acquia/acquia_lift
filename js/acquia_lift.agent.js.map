{"version":3,"sources":["../src/js/agent/acquia_lift.utility.queue.js","../src/js/agent/acquia_lift.agent.goal_queue.js"],"names":[],"mappings":"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","file":"acquia_lift.agent.js","sourcesContent":["/**\n * Utility functions for stateless queue cookie processing.\n *\n * Functionality includes basic read/write functionality.\n */\n(function ($, Drupal) {\n  \"use strict\";\n\n  Drupal.acquiaLiftUtility = Drupal.acquiaLiftUtility || {};\n\n  Drupal.acquiaLiftUtility.QueueItem = Drupal.acquiaLiftUtility.QueueItem || (function($) {\n    var queueItemUid,\n      queueItemData,\n      queueItemProcessing = false;\n\n    /**\n     * Generates a unique ID for this queue item.\n     *\n     * @return\n     *   An id to use that is unique across the browser instance.\n     */\n    function generateUniqueId() {\n      return 'acquia-lift-ts-' + $.now();\n    }\n\n    /**\n     * Reads the QueueItem from a simple object.\n     *\n     * @param params\n     *   Either the data for this queue item or an object with keys:\n     *   - id:  The unique id for this item\n     *   - data: The data for this item\n     *   - pflag: The processing flag for this item.\n     */\n    function fromObject(params) {\n      queueItemUid = params.id ? params.id : generateUniqueId();\n      queueItemData = params.data ? params.data : data;\n      queueItemProcessing = params.pflag ? params.pflag : false;\n    }\n\n    return {\n      /**\n       * Initialize a new QueueItem from initial parameters.\n       *\n       * @param params\n       *   Either the data for this queue item or an object with keys:\n       *   - id:  The unique id for this item\n       *   - data: The data for this item\n       *   - pflag: The processing flag for this item.\n       */\n      'initialize': function (params) {\n        fromObject(params);\n      },\n\n      /**\n       * Returns the unique ID assigned to this queue item.\n       */\n      'getId': function () {\n        return queueItemId;\n      },\n\n      /**\n       * Returns the data that is held by this queue item.\n       */\n      'getData': function() {\n        return queueItemData;\n      },\n\n      /**\n       * Deteremines if this queue item is currently processing.\n       */\n      'isProcessing': function () {\n        return queueItemProcessing;\n      },\n\n      /**\n       * Sets the current processing flag.\n       */\n      'setProcessing': function (isProcessing) {\n        queueItemProcessing = isProcessing;\n      },\n\n      /**\n       * Determines if QueueItem is equal to the current QueueItem.\n       *\n       * @param queueItem\n       *   The item to check against.\n       * @returns\n       *   True if equal, false if unequal.\n       */\n      'equals': function (queueItem) {\n        return (queueItem.getId() == queueItemUid);\n      },\n\n      /**\n       * Resets the processing flag on this queue item.\n       */\n      'reset': function() {\n        this.setProcessing(false);\n      },\n\n      /**\n       * Parses the QueueItem into a simple object.\n       */\n      'toObject': function () {\n      return {\n        'id': queueItemUid,\n        'data': queueItemData,\n        'pflag': queueItemProcessing\n      };\n    }\n\n  }\n  }($));\n\n  Drupal.acquiaLiftUtility.Queue = Drupal.acquiaLiftUtility.Queue || (function($) {\n    // @todo: Would be cool if we could swap out back-ends to local storage or\n    // other mechanism.\n\n    var cookieName = 'acquiaLiftQueue';\n\n    /**\n     * Indicates if the cookie handling script handles object serialization.\n     * This is not available in the jquery.cookie.js version that ships with\n     * Drupal 7 but some installations use a later version.\n     *\n     * @return boolean\n     *   True if cookie handles serialization, false if data must be manually\n     *   serialized before writing.\n     */\n    function cookieHandlesSerialization() {\n      return ($.cookie.json && $.cookie.json == true);\n    }\n\n    /**\n     * Reads the queue from storage.\n     *\n     * @returns array\n     *   An array of QueueItems.\n     */\n    function readQueue() {\n      var queue = $.cookie(cookieName);\n      var unserialized = cookieHandlesSerialization() ? queue : $.parseJSON(queue);\n      return $.isArray(unserialized) ? unserialized : [];\n    }\n\n    /**\n     * Returns a fully-parsed queue.\n     */\n    function getAll() {\n      var unserialized = readQueue(), i, num = unserialized.length, queue = [];\n      for (i = 0; i < num; i++) {\n        queue.push(Drupal.acquiaLiftUtility.QueueItem.initialize(unserialized[i]));\n      }\n      return queue;\n    }\n\n    /**\n     * Returns the first unprocessed QueueItem.\n     */\n    function getFirstUnprocessed() {\n      var unserialized = readQueue(), i, num = unserialized.length, item;\n      for (i = 0; i < num; i++) {\n        item = Drupal.acquiaLiftUtility.QueueItem.initialize(unserialized[i]);\n        if (!item.isProcessing()) {\n          return item;\n        }\n      }\n      return null;\n    }\n\n    /**\n     * Find index of a QueueItem within the Queue.\n     *\n     * @param queue\n     *   An instance of the queue to search.\n     * @param item\n     *   The QueueItem to find within the queue.\n     * @return int\n     *   The index of the item in the queue or -1 if not found.\n     */\n    function indexOf(queue, item) {\n      var i,\n        num = queue.length,\n        test;\n      // Only initialize as many as we have to in order to find a match.\n      for (i = 0; i < num; i++) {\n        test = Drupal.acquiaLiftUtility.QueueItem.initialize(queue[i]);\n        if (test.equals(item)) {\n          return i;\n        }\n      }\n      return -1;\n    }\n\n\n    /**\n     * Writes the queue to storage.\n     *\n     * @param array\n     *   The queue as an array.\n     */\n    function writeQueue(queue) {\n      var queueData = [], i, num = queue.length;\n\n      // Prepare the queue by making sure all items to save are simple objects.\n      for (i = 0; i < num; i++) {\n        if (queue[i] instanceof Drupal.acquiaLiftUtility.QueueItem) {\n          queueData.push(queue[i].toObject())\n        } else {\n          queueData.push(queue[i]);\n        }\n      }\n      // Serialize if necessary.\n      if (!cookieHandlesSerialization()) {\n        queue = $.toJSON(queue);\n      }\n      // Write to the cookie.\n      $.cookie(cookieName, queue);\n    }\n\n    /**\n     * Adds an existing QueueItem back to the queue for re-processing.\n     *\n     * @todo think about and possibly implement a retry count\n     */\n    function addBack(queueItem) {\n      var queue = readQueue();\n      var index = indexAt(queue, queueItem);\n      queueItem.reset();\n      if (index >= 0) {\n        queue.splice(index, 1, queueItem);\n      } else {\n        queue.push(queueItem);\n      }\n      writeQueue(queue);\n    };\n\n    /**\n     * Publicly accessible queue methods.\n     */\n    return {\n      /**\n       * Adds a QueueItem to the queue.\n       *\n       * The item can be new data to add, a new QueueItem to add, or an\n       * existing QueueItem to return to the queue for re-processing.\n       *\n       * @param data\n       *   Data or a QueueItem to add to the queue.\n       */\n      'add': function (data) {\n        if (data instanceof Drupal.acquiaLiftUtility.QueueItem) {\n          addBack(data);\n          return;\n        }\n        var queue = readQueue();\n        queue.push(Drupal.acquiaLiftUtility.QueueItem.initialize(data));\n        writeQueue(queue);\n      },\n\n      /**\n       * Gets the next unprocessed item in the queue for processing.\n       * @returns a queueItem or null;\n       *   The queueItem.\n       */\n      'getNext': function () {\n        var item = getFirstUnprocessed();\n        item.setProcessing(true);\n\n      },\n\n      /**\n       * Removes a queueItem from the processing queue.\n       *\n       * @param queueItem\n       *   The item to remove.\n       * @returns\n       *   True if the item was found to remove, false if not found.\n       */\n      'remove': function (queueItem) {\n        var queue = readQueue();\n        var index = indexOf(queue, queueItem);\n        if (index >= 0) {\n          queue[i].splice(index, 1);\n          writeQueue(queue);\n          return true;\n        }\n        return false;\n      },\n\n      /**\n       * Resets the processing status on all items in the queue.\n       */\n      'reset': function () {\n        var i,\n          queue = getAll(),\n          num = queue.length;\n        for (i = 0; i < num; i++) {\n          queue[i].reset();\n        }\n        writeQueue(queue);\n      }\n    }\n  }($));\n\n}(jQuery, Drupal));\n","/**\n * Acquia Lift goals processing queue functions.\n */\n\n(function ($, Drupal) {\n  \"use strict\";\n\n  Drupal.acquiaLiftUtility = Drupal.acquiaLiftUtility || {};\n  Drupal.acquiaLiftUtility.GoalQueue = Drupal.acquiaLiftUtility.GoalQueue || (function($) {\n\n    var acquiaLiftAPI;\n\n    /**\n     * Converts the data for a goal into the format for saving in the queue.\n     *\n     * @param goal\n     *   An object with the following keys:\n     *   - agentName: The name of the agent for this gaol\n     *   - options: An object of goal options to be sent with the goal.\n     * @return object\n     *   A simple object of data to be saved.\n     */\n    function convertGoalToQueueData(goal) {\n      return {'a': goal.agentName, 'o': goal.options};\n    }\n\n    /**\n     * Converts the queue data into the data for a goal.\n     *\n     * @param item\n     *   The queue item data.\n     * @return object\n     *   An object with the following keys:\n     *   - agentName: The name of the agent for this gaol\n     *   - options: An object of goal options to be sent with the goal.\n     */\n    function convertQueueDataToGoal(item) {\n      return {\n        'agentName': item.a,\n        'options': item.o\n      };\n    }\n\n    /**\n     * Processes a goal QueueItem through the Acquia Lift service.\n     *\n     * @param queueItem\n     *   The item to process.\n     * @return boolean\n     *   True if successful, false if error.\n     */\n    function processGoalItem(queueItem) {\n      if (!acquiaLiftAPI) {\n        return false;\n      }\n      var goal = convertQueueDataToGoal(queueItem.getData());\n      acquiaLiftAPI.goal(goal.agentName, goal.options, function(response, textStatus, jqXHR) {\n        if (window.console) {\n          console.log(response);\n        }\n        return (response === 200);\n      });\n    }\n\n    return {\n      /**\n       * Initialize the goal queue.\n       *\n       * @param api\n       *   An instance of the Acquia Lift API.\n       */\n      'initialize': function (api) {\n        acquiaLiftAPI = api;\n      },\n      /**\n       * Adds goal data to the persistent queue.\n       *\n       * @param agentName\n       *   The name of the agent for the goal.\n       * @param options\n       *   Goal options to send with the goal.\n       */\n      'addGoal': function (agentName, options) {\n        var data = convertGoalToQueueData({'agentName': agentName, 'options': options});\n        // Add the data to the persistent queue.\n        Drupal.acquiaLiftUtility.Queue.add(data);\n        // Now attempt to process the queue.\n        processQueue();\n      },\n\n      /**\n       * Process the queue by sending goals to the Acquia Lift agent.\n       *\n       * @param reset\n       *   True if the queue should be reset such that all items are tried\n       *   (such as in an initial processing for the page request).\n       */\n      'processQueue': function (reset) {\n        reset = reset || false;\n        // The processing status should be reset upon the initial page load.\n        if (reset) {\n          Drupal.acquiaLiftUtility.Queue.reset();\n        }\n        var item = Drupal.acquiaLiftUtility.Queue.getNext();\n        while (item) {\n          var success = processGoalItem(item);\n          if (success) {\n            // Only remove from the queue if processing was successful.\n            Drupal.acquiaLiftUtility.Queue.remove(item);\n          } else {\n            // Otherwise mark it for re-processing.\n            Drupal.acquiaLiftUtility.Queue.addBack(item);\n          }\n          item = Drupal.acquiaLiftUtility.Queue.getNext();\n        }\n\n      }\n    }\n  }($));\n\n\n}(jQuery, Drupal));\n"]}